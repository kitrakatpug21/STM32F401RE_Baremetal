
2_7Seg_Array.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000184  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  08000318  08000318  00010318  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000340  08000340  00010348  2**0
                  CONTENTS
  4 .ARM          00000000  08000340  08000340  00010348  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000340  08000348  00010348  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000340  08000340  00010340  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000344  08000344  00010344  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010348  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000348  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000348  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010348  2**0
                  CONTENTS, READONLY
 12 .debug_info   000003b7  00000000  00000000  00010378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000f7  00000000  00000000  0001072f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00010828  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  00010870  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000db61  00000000  00000000  000108a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000507  00000000  00000000  0001e401  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004f412  00000000  00000000  0001e908  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0006dd1a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000005c  00000000  00000000  0006dd6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000300 	.word	0x08000300

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000300 	.word	0x08000300

080001d4 <main>:
#define PB4			(1U<<4)
#define PB5			(1U<<5)
#define PB6			(1U<<6)

int main(void)
{
 80001d4:	b4b0      	push	{r4, r5, r7}
 80001d6:	b08d      	sub	sp, #52	; 0x34
 80001d8:	af00      	add	r7, sp, #0
	RCC -> AHB1ENR |= GPIOBEN;
 80001da:	4b1e      	ldr	r3, [pc, #120]	; (8000254 <main+0x80>)
 80001dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001de:	4a1d      	ldr	r2, [pc, #116]	; (8000254 <main+0x80>)
 80001e0:	f043 0302 	orr.w	r3, r3, #2
 80001e4:	6313      	str	r3, [r2, #48]	; 0x30
	uint32_t segment[10] = {0x0000003F, 0x00000006, 0x0000005B,
 80001e6:	4b1c      	ldr	r3, [pc, #112]	; (8000258 <main+0x84>)
 80001e8:	463c      	mov	r4, r7
 80001ea:	461d      	mov	r5, r3
 80001ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80001ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80001f0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80001f2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80001f4:	e895 0003 	ldmia.w	r5, {r0, r1}
 80001f8:	e884 0003 	stmia.w	r4, {r0, r1}
							0x0000004F, 0x00000066, 0x0000006D,
							0x0000007D, 0x00000007, 0x0000007F,
							0x0000006F};
	GPIOB-> MODER  |= (1U<<0)|(1U<<2)|(1U<<4)|(1U<<6)|(1U<<8)|(1U<<10)|(1U<<12);
 80001fc:	4b17      	ldr	r3, [pc, #92]	; (800025c <main+0x88>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a16      	ldr	r2, [pc, #88]	; (800025c <main+0x88>)
 8000202:	f443 53aa 	orr.w	r3, r3, #5440	; 0x1540
 8000206:	f043 0315 	orr.w	r3, r3, #21
 800020a:	6013      	str	r3, [r2, #0]
	GPIOB-> MODER  &= ~((1U<<1)|(1U<<3)|(1U<<5)|(1U<<7)|(1U<<9)|(1U<<11)|(1U<<13));
 800020c:	4b13      	ldr	r3, [pc, #76]	; (800025c <main+0x88>)
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	4a12      	ldr	r2, [pc, #72]	; (800025c <main+0x88>)
 8000212:	f423 532a 	bic.w	r3, r3, #10880	; 0x2a80
 8000216:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 800021a:	6013      	str	r3, [r2, #0]

	while(1)
	{
		for (int i = 0; i < 10; i = i+1)
 800021c:	2300      	movs	r3, #0
 800021e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000220:	e014      	b.n	800024c <main+0x78>
		{
			GPIOB-> ODR = segment[i];
 8000222:	4a0e      	ldr	r2, [pc, #56]	; (800025c <main+0x88>)
 8000224:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000226:	009b      	lsls	r3, r3, #2
 8000228:	3330      	adds	r3, #48	; 0x30
 800022a:	443b      	add	r3, r7
 800022c:	f853 3c30 	ldr.w	r3, [r3, #-48]
 8000230:	6153      	str	r3, [r2, #20]
			for (int delay = 0; delay <= 400000;delay++);
 8000232:	2300      	movs	r3, #0
 8000234:	62bb      	str	r3, [r7, #40]	; 0x28
 8000236:	e002      	b.n	800023e <main+0x6a>
 8000238:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800023a:	3301      	adds	r3, #1
 800023c:	62bb      	str	r3, [r7, #40]	; 0x28
 800023e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000240:	4a07      	ldr	r2, [pc, #28]	; (8000260 <main+0x8c>)
 8000242:	4293      	cmp	r3, r2
 8000244:	ddf8      	ble.n	8000238 <main+0x64>
		for (int i = 0; i < 10; i = i+1)
 8000246:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000248:	3301      	adds	r3, #1
 800024a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800024c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800024e:	2b09      	cmp	r3, #9
 8000250:	dde7      	ble.n	8000222 <main+0x4e>
 8000252:	e7e3      	b.n	800021c <main+0x48>
 8000254:	40023800 	.word	0x40023800
 8000258:	08000318 	.word	0x08000318
 800025c:	40020400 	.word	0x40020400
 8000260:	00061a80 	.word	0x00061a80

08000264 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000264:	480d      	ldr	r0, [pc, #52]	; (800029c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000266:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000268:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800026c:	480c      	ldr	r0, [pc, #48]	; (80002a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800026e:	490d      	ldr	r1, [pc, #52]	; (80002a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000270:	4a0d      	ldr	r2, [pc, #52]	; (80002a8 <LoopForever+0xe>)
  movs r3, #0
 8000272:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000274:	e002      	b.n	800027c <LoopCopyDataInit>

08000276 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000276:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000278:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800027a:	3304      	adds	r3, #4

0800027c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800027c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800027e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000280:	d3f9      	bcc.n	8000276 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000282:	4a0a      	ldr	r2, [pc, #40]	; (80002ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000284:	4c0a      	ldr	r4, [pc, #40]	; (80002b0 <LoopForever+0x16>)
  movs r3, #0
 8000286:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000288:	e001      	b.n	800028e <LoopFillZerobss>

0800028a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800028a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800028c:	3204      	adds	r2, #4

0800028e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800028e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000290:	d3fb      	bcc.n	800028a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000292:	f000 f811 	bl	80002b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000296:	f7ff ff9d 	bl	80001d4 <main>

0800029a <LoopForever>:

LoopForever:
    b LoopForever
 800029a:	e7fe      	b.n	800029a <LoopForever>
  ldr   r0, =_estack
 800029c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002a4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002a8:	08000348 	.word	0x08000348
  ldr r2, =_sbss
 80002ac:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b0:	2000001c 	.word	0x2000001c

080002b4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002b4:	e7fe      	b.n	80002b4 <ADC_IRQHandler>
	...

080002b8 <__libc_init_array>:
 80002b8:	b570      	push	{r4, r5, r6, lr}
 80002ba:	4d0d      	ldr	r5, [pc, #52]	; (80002f0 <__libc_init_array+0x38>)
 80002bc:	4c0d      	ldr	r4, [pc, #52]	; (80002f4 <__libc_init_array+0x3c>)
 80002be:	1b64      	subs	r4, r4, r5
 80002c0:	10a4      	asrs	r4, r4, #2
 80002c2:	2600      	movs	r6, #0
 80002c4:	42a6      	cmp	r6, r4
 80002c6:	d109      	bne.n	80002dc <__libc_init_array+0x24>
 80002c8:	4d0b      	ldr	r5, [pc, #44]	; (80002f8 <__libc_init_array+0x40>)
 80002ca:	4c0c      	ldr	r4, [pc, #48]	; (80002fc <__libc_init_array+0x44>)
 80002cc:	f000 f818 	bl	8000300 <_init>
 80002d0:	1b64      	subs	r4, r4, r5
 80002d2:	10a4      	asrs	r4, r4, #2
 80002d4:	2600      	movs	r6, #0
 80002d6:	42a6      	cmp	r6, r4
 80002d8:	d105      	bne.n	80002e6 <__libc_init_array+0x2e>
 80002da:	bd70      	pop	{r4, r5, r6, pc}
 80002dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80002e0:	4798      	blx	r3
 80002e2:	3601      	adds	r6, #1
 80002e4:	e7ee      	b.n	80002c4 <__libc_init_array+0xc>
 80002e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80002ea:	4798      	blx	r3
 80002ec:	3601      	adds	r6, #1
 80002ee:	e7f2      	b.n	80002d6 <__libc_init_array+0x1e>
 80002f0:	08000340 	.word	0x08000340
 80002f4:	08000340 	.word	0x08000340
 80002f8:	08000340 	.word	0x08000340
 80002fc:	08000344 	.word	0x08000344

08000300 <_init>:
 8000300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000302:	bf00      	nop
 8000304:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000306:	bc08      	pop	{r3}
 8000308:	469e      	mov	lr, r3
 800030a:	4770      	bx	lr

0800030c <_fini>:
 800030c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800030e:	bf00      	nop
 8000310:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000312:	bc08      	pop	{r3}
 8000314:	469e      	mov	lr, r3
 8000316:	4770      	bx	lr
